diff -ruN gcc-4.5.2-original/gcc/config/arm/t-arm-elf gcc-4.5.2/gcc/config/arm/t-arm-elf
--- gcc-4.5.2-original/gcc/config/arm/t-arm-elf	2011-04-22 19:31:04.705582998 +0200
+++ gcc-4.5.2/gcc/config/arm/t-arm-elf	2011-04-26 14:35:11.899936422 +0200
@@ -36,15 +36,20 @@
 MULTILIB_EXCEPTIONS  = 
 MULTILIB_MATCHES     =
 
-#MULTILIB_OPTIONS      += march=armv7
-#MULTILIB_DIRNAMES     += thumb2
-#MULTILIB_EXCEPTIONS   += march=armv7* marm/*march=armv7*
-#MULTILIB_MATCHES      += march?armv7=march?armv7-a
-#MULTILIB_MATCHES      += march?armv7=march?armv7-r
-#MULTILIB_MATCHES      += march?armv7=march?armv7-m
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a8
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-r4
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m3
+## begin TFT patch
+## RATIONALE: building also thumb2 multilibs allow supporting Cortex-M3 processors
+## as well as ARM7 processors with the same compiler
+## see http://gcc.gnu.org/ml/gcc-help/2009-02/msg00033.html
+MULTILIB_OPTIONS      += march=armv7
+MULTILIB_DIRNAMES     += thumb2
+MULTILIB_EXCEPTIONS   += march=armv7* marm/*march=armv7*
+MULTILIB_MATCHES      += march?armv7=march?armv7-a
+MULTILIB_MATCHES      += march?armv7=march?armv7-r
+MULTILIB_MATCHES      += march?armv7=march?armv7-m
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a8
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-r4
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m3
+## end TFT patch
 
 # Not quite true.  We can support hard-vfp calling in Thumb2, but how do we
 # express that here?  Also, we really need architecture v5e or later
diff -ruN gcc-4.5.2-original/libstdc++-v3/libsupc++/eh_alloc.cc gcc-4.5.2/libstdc++-v3/libsupc++/eh_alloc.cc
--- gcc-4.5.2-original/libstdc++-v3/libsupc++/eh_alloc.cc	2011-04-22 19:31:05.995583002 +0200
+++ gcc-4.5.2/libstdc++-v3/libsupc++/eh_alloc.cc	2011-04-26 14:35:11.894936422 +0200
@@ -73,6 +73,15 @@
 # define EMERGENCY_OBJ_COUNT	4
 #endif
 
+//begin TFT patch
+//RATIONALE: reduced emergency buffer for ARM microcontrollers, saves ~1.5K of RAM
+#undef EMERGENCY_OBJ_SIZE
+#undef EMERGENCY_OBJ_COUNT
+
+#define EMERGENCY_OBJ_SIZE  160
+#define EMERGENCY_OBJ_COUNT 3
+//end TFT patch
+
 #if INT_MAX == 32767 || EMERGENCY_OBJ_COUNT <= 32
 typedef unsigned int bitmask_type;
 #else
