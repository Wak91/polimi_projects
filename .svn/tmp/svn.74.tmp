package Network;
import it.polimi.ingegneriaDelSoftware2013.horseFever_lorenzo2.fontana_fabio1.gritti.GameOption;

import java.io.*;
import java.net.*;
import java.util.*;

import Controller_events.HorseFeverEventController;
import Controller_events.getNomePlayerEvent;
import View.GUI_interface;
import View.Text_interface;
import View.User_interface;

public class Client {

	private User_interface View;
	private ModReteController MrC;
	
	private InetAddress serveraddress;
	private int serverport;
	private InputStreamReader in;
	private BufferedReader sIN;
	private Socket connessione;;
	
	
	public Client(InetAddress serveraddress,int serverport){
	if(GameOption.gui_text==1)
	  { View = new GUI_interface();}
	else
	  { View = new Text_interface();}
	
	this.serveraddress = serveraddress;
	this.serverport = serverport; //se questi campi sono vuoti non esiste un server, dire di uscire...

	MrC = new ModReteController(serveraddress,serverport);
	
	try {
		connessione = new Socket(serveraddress,serverport); // ricevuti i parametri dal server apro il socket
	} catch (IOException e) {
		e.printStackTrace();
	}
	try {
		in = new InputStreamReader(connessione.getInputStream()); //prendo l'input stream per il flusso in ingresso da socket
	    sIN = new BufferedReader(in);
	} catch (IOException e) {
		e.printStackTrace();
	}
	}
	
	
	
	public void go() {
		
		ServerSocket ss=null;
		try {
			System.out.println(Server.getCurrentConnession());
			ss = new ServerSocket(3300);
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		HorseFeverEventController eventarrived;
		while(true) //stiamo qua dentro finche' il gioco non e' finito
		{
			try {
				connessione = ss.accept();
				InputStream is = connessione.getInputStream();
				ObjectInputStream ois = new ObjectInputStream(is);
				eventarrived = (HorseFeverEventController)ois.readObject();
				//ora devo controllare il tipo di evento letto!
				
				if( eventarrived.getTip().isInstance(getNomePlayerEvent.class))//se mi stanno chiedendo i nomi allora cast verso getNomePlayer e via...
				   { 
			    	getNomePlayerEvent event = new getNomePlayerEvent(MrC);
			    	View.get_nome_player(event); //chiamo quindi la View che � di tipo Text o Gui 
			       }
			
			
			
			
			
			} catch (  ClassNotFoundException e) {
				e.printStackTrace();
			}catch (IOException   e) {
				e.printStackTrace();
			}
	
	    
		
		
		}//fine while ci uscir� con un break su qualche evento.
		
		
		
	}
}
