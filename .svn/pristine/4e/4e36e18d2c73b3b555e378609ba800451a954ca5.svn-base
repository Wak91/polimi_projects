package View;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Player_GUI extends JFrame{
	
	 private ArrayList<PropertyChangeListener> listeners = 
	            new ArrayList<PropertyChangeListener>();

	final Toolkit toolkit ;
	int xSize;
	int ySize;
	private JFrame frame;
	private JPanel top_panel;
	private  JPanel main_panel;
	private JPanel bottom_panel;

	//---------ATTRIBUTI METODI-------> 
	private int num_giocatori_temp=2;
	private JLabel image_num_player;
	private int confirm_num;
	


	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Player_GUI window = new Player_GUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Player_GUI() {
		toolkit = Toolkit.getDefaultToolkit();
		xSize = ((int) toolkit.getScreenSize().getWidth());  
		ySize = ((int) toolkit.getScreenSize().getHeight()); 
		frame = new JFrame();
		frame.setBounds(0, 0, xSize, ySize);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		
		top_panel=new JPanel();
		top_panel.setBounds(0, 0, xSize, ySize/7);
		
		main_panel = new JPanel();
		main_panel.setBounds(0, ySize*1/7, xSize, ySize*6/7);
		
		bottom_panel = new JPanel();
		bottom_panel.setBounds(0, ySize*6/7, xSize, ySize/7);
		bottom_panel.setBackground(new Color(30,30,30));
		
		frame.getContentPane().add(top_panel);

		frame.getContentPane().add(bottom_panel);
		frame.getContentPane().add(main_panel);
		
		frame.setVisible(true);
		
		frame.setSize(xSize,ySize);  
		
	}
	/**
	 * Metodo che riceve percorso file  dimensioni e 
	 * restituisce una buffered Image ridimensionata che puo essere usata per creare ImageIcon
	 * @param nome_immagine
	 * @param width
	 * @param height
	 * @param type
	 * @return
	 */
	private BufferedImage resizeImage(String nome_immagine,int width,int height) {  
	     try {
			
	    	File fileIcon = new File(nome_immagine);
			BufferedImage originalImage = ImageIO.read(fileIcon);
			BufferedImage resizedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);  
	        Graphics2D g = resizedImage.createGraphics();  
	        g.drawImage(originalImage, 0, 0, width, height, null);  
	        g.dispose();  
	        return resizedImage;  
	     } catch (Exception e) {
				e.printStackTrace();
			}  
	     return null;
    }  
	public  void num_player() {
		JLabel title= new JLabel("INSERIMENTO NUMERO GIOCATORI");
		
		JButton remove_player = new JButton("REMOVE");
		JButton add_player = new JButton("ADD");
		JButton confirm = new JButton("CONFIRM");
		final HashMap<Integer, String> map_numplayer_image = new HashMap<Integer, String>();
		
		map_numplayer_image.put(2, "images/num_player/num_horse2.png");
		map_numplayer_image.put(3, "images/num_player/num_horse3.png");
		map_numplayer_image.put(4, "images/num_player/num_horse4.png");
		map_numplayer_image.put(5, "images/num_player/num_horse5.png");
		map_numplayer_image.put(6, "images/num_player/num_horse6.png");

		
		
		ImageIcon imgplayer = new ImageIcon(resizeImage("images/num_player/num_horse2.png", xSize, ySize*5/7));
		image_num_player = new JLabel();
		image_num_player.setIcon(imgplayer);
		
		
		top_panel.add(title);
		
		main_panel.add(image_num_player);
		bottom_panel.add(remove_player);
		bottom_panel.add(add_player);
		bottom_panel.add(confirm);
		
		add_player.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				if (num_giocatori_temp<=5) {
					num_giocatori_temp++;
					image_num_player.setIcon(new ImageIcon(resizeImage(map_numplayer_image.get(num_giocatori_temp),xSize,ySize*5/7)));
					
				}
				else {					
					
					BufferedImage imgerror6 = resizeImage("images/num_player/num_giocatori_6.png", 150, 150);
					JOptionPane.showMessageDialog(null, "Non si possono inserire piu di 6 giocatori","Errore",JOptionPane.INFORMATION_MESSAGE,
	                        new ImageIcon(imgerror6));
				}
			}
		});
		remove_player.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				if (num_giocatori_temp>=3) {
					num_giocatori_temp--;
					image_num_player.setIcon(new ImageIcon(resizeImage(map_numplayer_image.get(num_giocatori_temp),xSize,ySize*5/7)));

				}
				else {
					BufferedImage imgerror2 = resizeImage("images/num_player/num_giocatori_2.png", 150, 150);
					JOptionPane.showMessageDialog(null,"Ci devono essere almeno 2 giocatori","Errore",JOptionPane.INFORMATION_MESSAGE,
	                       new ImageIcon(imgerror2));
				}			
			}
		});
		
		confirm.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				main_panel.removeAll();
				top_panel.removeAll();
				main_panel.revalidate();
				frame.repaint();//repaint a JFrame jframe in this case 
				notifyListeners(this, "confirm_num", 2, confirm_num);

			}
		});
			
	}
	
	public void addChangeListener(PropertyChangeListener newListener) {
        listeners.add(newListener);
    }
	
	private void notifyListeners(Object object, String property, int oldValue, int newValue) {
        for (PropertyChangeListener name : listeners) {
            name.propertyChange(new PropertyChangeEvent(this, 
                            property, 
                            oldValue, 
                            newValue));}
        }

	public String get_player() {
		JLabel title= new JLabel("INSERIMENTO NUMERO GIOCATORI");
		JButton confirm = new JButton("CONFIRM");
		
		return null;

	}
	

}
