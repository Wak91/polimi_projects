package View;

import java.awt.EventQueue;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

import Controller_events.showClassificaEvent;
import Controller_events.showPriceEvent;
import Model.Giocatore;

public class Finale_price_GUI {

	JPanel panel_1;
	JFrame frame;
	
	public Finale_price_GUI(final GUI_interface gui) {
		frame = new JFrame();
		frame.setBounds(100, 100, 794, 596);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		panel_1 = new JPanel();
		panel_1.setBounds(346, 0, 442, 721);
		frame.getContentPane().add(panel_1);
		panel_1.setLayout(null);
		
		JLabel lblNewLabel_3 = new JLabel("New label");
		lblNewLabel_3.setBounds(29, 20, 79, 90);
		panel_1.add(lblNewLabel_3);
		
		JLabel label_15 = new JLabel("New label");
		label_15.setBounds(29, 132, 79, 90);
		panel_1.add(label_15);
		
		JLabel label_16 = new JLabel("New label");
		label_16.setBounds(29, 241, 79, 90);
		panel_1.add(label_16);
		
		JLabel label_17 = new JLabel("New label");
		label_17.setBounds(29, 343, 79, 90);
		panel_1.add(label_17);
		
		JLabel label_18 = new JLabel("New label");
		label_18.setBounds(29, 445, 79, 90);
		panel_1.add(label_18);
		
		JLabel label_19 = new JLabel("New label");
		label_19.setBounds(29, 547, 79, 90);
		panel_1.add(label_19);
	
	}
	public void show(showPriceEvent evt) {
		HashMap<Giocatore, ArrayList<Integer>> mappa=evt.getPriceHashMap();
		int i=0;
		for (Giocatore gioc : mappa.keySet()) {
			JLabel lblNewLabel = new JLabel("New label");
			lblNewLabel.setIcon(new ImageIcon());
			lblNewLabel.setBounds(29, 20, 79+i, 90);
			panel_1.add(lblNewLabel);
		}
		frame.setVisible(true);
	}
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Finale_price_GUI window = new Finale_price_GUI(new GUI_interface());
					
					showPriceEvent ss= new showPriceEvent(null, null);
 					window.show(ss);
					
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

}
