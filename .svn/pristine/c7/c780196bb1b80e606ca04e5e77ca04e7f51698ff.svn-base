package View;


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Graphics2D;
import java.awt.Label;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;


import Model.Carta_azione;
import Model.Cavallo;
import Model.Giocatore;

public  class  GUI_interface implements User_interface {
	private final Toolkit toolkit ;
	private int xSize;
	private int ySize;
	private JFrame frame;
	private JPanel top_panel;
	private  JPanel main_panel;
	private JPanel bottom_panel;
	int num_giocatori_temp=2;
	//---------ATTRIBUTI METODI-------> 
	private JLabel image_num_player;

	
	public GUI_interface() {
		toolkit = Toolkit.getDefaultToolkit();
		xSize = ((int) toolkit.getScreenSize().getWidth());  
		ySize = ((int) toolkit.getScreenSize().getHeight()); 
		frame = new JFrame();
		frame.setBounds(0, 0, xSize, ySize);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		
		top_panel=new JPanel();
		top_panel.setBounds(0, 0, xSize, ySize/7);
		
		main_panel = new JPanel();
		main_panel.setBounds(0, ySize*1/7, xSize, ySize*6/7);
		
		bottom_panel = new JPanel();
		bottom_panel.setBounds(0, ySize*6/7, xSize, ySize/7);
		bottom_panel.setBackground(new Color(30,30,30));
		
		frame.getContentPane().add(top_panel);

		frame.getContentPane().add(bottom_panel);
		frame.getContentPane().add(main_panel);
		
		//frame.setVisible(true);
		
		frame.setSize(xSize,ySize);  
		
		
	}
	/**
	 * Metodo che riceve percorso file  dimensioni e 
	 * restituisce una buffered Image ridimensionata che puo essere usata per creare ImageIcon
	 * @param nome_immagine
	 * @param width
	 * @param height
	 * @param type
	 * @return
	 */
	private BufferedImage resizeImage(String nome_immagine,int width,int height) {  
	     try {
			
	    	File fileIcon = new File(nome_immagine);
			BufferedImage originalImage = ImageIO.read(fileIcon);
			BufferedImage resizedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);  
	        Graphics2D g = resizedImage.createGraphics();  
	        g.drawImage(originalImage, 0, 0, width, height, null);  
	        g.dispose();  
	        return resizedImage;  
	     } catch (Exception e) {
				e.printStackTrace();
			}  
	     return null;
    }  

	public  int get_num_player() {
		
		
JLabel title= new JLabel("INSERIMENTO NUMERO GIOCATORI");
		
		JButton remove_player = new JButton("REMOVE");
		JButton add_player = new JButton("ADD");
		final HashMap<Integer, String> map_numplayer_image = new HashMap<Integer, String>();
		
		map_numplayer_image.put(2, "images/num_player/num_horse2.png");
		map_numplayer_image.put(3, "images/num_player/num_horse3.png");
		map_numplayer_image.put(4, "images/num_player/num_horse4.png");
		map_numplayer_image.put(5, "images/num_player/num_horse5.png");
		map_numplayer_image.put(6, "images/num_player/num_horse6.png");

		
		
		ImageIcon imgplayer = new ImageIcon(resizeImage("images/num_player/num_horse2.png", xSize, ySize*5/7));
		image_num_player = new JLabel();
		image_num_player.setIcon(imgplayer);
		
		
		top_panel.add(title);
		
		main_panel.add(image_num_player);
		main_panel.add(remove_player);
		main_panel.add(add_player);
		
		add_player.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				if (num_giocatori_temp<=5) {
					num_giocatori_temp++;
					image_num_player.setIcon(new ImageIcon(resizeImage(map_numplayer_image.get(num_giocatori_temp),xSize,ySize*5/7)));
					
				}
				else {					
					
					BufferedImage imgerror6 = resizeImage("images/num_player/num_giocatori_6.png", 150, 150);
					JOptionPane.showMessageDialog(null, "Non si possono inserire piu di 6 giocatori","Errore",JOptionPane.INFORMATION_MESSAGE,
	                        new ImageIcon(imgerror6));
				}
			}
		});
		remove_player.addActionListener(new ActionListener() {
			
			public void actionPerformed(ActionEvent e) {
				if (num_giocatori_temp>=3) {
					num_giocatori_temp--;
					image_num_player.setIcon(new ImageIcon(resizeImage(map_numplayer_image.get(num_giocatori_temp),xSize,ySize*5/7)));

				}
				else {
					BufferedImage imgerror2 = resizeImage("images/num_player/num_giocatori_2.png", 150, 150);
					JOptionPane.showMessageDialog(null,"Ci devono essere almeno 2 giocatori","Errore",JOptionPane.INFORMATION_MESSAGE,
	                       new ImageIcon(imgerror2));
				}			
			}
		});
		
		JPanel complete_panel= new JPanel();
		complete_panel.setLayout(new BorderLayout());
		complete_panel.add(top_panel,BorderLayout.NORTH);
		complete_panel.add(main_panel,BorderLayout.CENTER);
		complete_panel.add(bottom_panel,BorderLayout.SOUTH);
		int resut = JOptionPane.showOptionDialog(null, complete_panel, "Enter a Number",
                JOptionPane.CLOSED_OPTION,JOptionPane.PLAIN_MESSAGE,null,null,null);
		//------------
	
		return num_giocatori_temp;
	}

	public String get_player() {
		JLabel title= new JLabel("INSERIMENTO NUMERO GIOCATORI");
		JButton confirm = new JButton("CONFIRM");
		
		return null;

	}


	public ArrayList<Carta_azione> get_carte_azione() {
		// TODO Auto-generated method stub
		return null;
	}

	public void show_action_card(Giocatore player) {
		// TODO Auto-generated method stub

	}

	public String get_cavallo_scommessa(String message) {
		// TODO Auto-generated method stub
		return null;
	}

	public String get_cavallo_scommessa() {
		// TODO Auto-generated method stub
		return null;
	}

	public int get_soldi_scommessa(Giocatore player) {
		// TODO Auto-generated method stub
		return 0;
	}

	public String get_tipo_scommessa() {
		// TODO Auto-generated method stub
		return null;
	}

	public String get_tipo_scommessa(String messaggio) {
		// TODO Auto-generated method stub
		return null;
	}

	public void show_all_bet() {
		// TODO Auto-generated method stub

	}

	public void game_over_player(Giocatore player) {
		// TODO Auto-generated method stub

	}

	public boolean make_seconda_scommessa(Giocatore player) {
		// TODO Auto-generated method stub
		return false;
	}

	public void not_enough_money(String nome) {
		// TODO Auto-generated method stub

	}

	

	public String get_horse_affected() {
		// TODO Auto-generated method stub
		return null;
	}

	public void show_affected_horse() {
		// TODO Auto-generated method stub

	}

	public void show_corsa(ArrayList<Cavallo> cavalli_in_gioco,
			int lunghezza_percorso) {
		// TODO Auto-generated method stub

	}

	public void show_classifica(ArrayList<String> classifica) {
		// TODO Auto-generated method stub

	}

	public void show_bad_end_message() {
		// TODO Auto-generated method stub

	}

	public void show_win_money(String nome, int money, int pv) {
		// TODO Auto-generated method stub

	}

	public void show_winner(String vincitore) {
		// TODO Auto-generated method stub

	}


	
	

	public void show_all_bet(Giocatore player) {
		// TODO Auto-generated method stub
		
	}

	public int get_action_card_played(Giocatore player) {
		// TODO Auto-generated method stub
		return 0;
	}

	public void show_action_horse(Cavallo horse) {
		// TODO Auto-generated method stub
		
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
	         public void run() {
	     		GUI_interface popoGui_interface = new GUI_interface();

	        	 popoGui_interface.get_num_player();	         }
	      });

	}
	public void show_win_money(Giocatore player, int money, int pv) {
		// TODO Auto-generated method stub
		
	}
	public void show_win_scud(Giocatore player, int money) {
		// TODO Auto-generated method stub
		
	}
	public void show_lost_money(Giocatore player) {
		// TODO Auto-generated method stub
		
	}



}
