package it.polimi.ingegneriaDelSoftware2013.horseFever_lorenzo2.fontana_fabio1.gritti;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.StringTokenizer;

/**
 * La classe carta movimento contiene 2 attributi:
 * - quotazione: indica la quotazione che si muove
 * - movimento: indica di quanto si muove la scuderia corrispondente alla quotazione corrente
 * 
 * es. del file contenente le carte movimento:
 * carta 1 --> <quotaz><step>;<quotaz><step>; ...[ x6 ] 
 * carta 2 --> <quotaz><step>;<quotaz><step>; ... [ x6 ] 
 * ...
 * [ x numero di carte mov ]
 * 
 * 0;4;1;3;2;3;3;2;4;2;5;2;
 * 0;3;1;3;...
 * @author degrigis
 *
 */

public class Carta_movimento extends Carta {

	private final ArrayList <Movimento> val;

	public Carta_movimento()
	{
	super();
	val = new ArrayList <Movimento>();	
	}
	
	public int get_movimento(int quotazione)
	{
		for(Movimento m : val)
		   {
			if(quotazione == m.getQuote())
				return m.getStep();
		   }
		return -1; //errore, qua non dovrei arrivarci mai, altrimenti esplode il gioco
	}
	
	public void visualizza()
	{
    for( Movimento m : val)
    	m.visualizza();
	}
	
	public void aggiungi(Movimento m)
	{
		val.add(m);
	}
	
	/**
	 * Metodo utilizzato per estrarre tutte le carte di tipo movimento in un mazzo passato come parametro
	 * @param m
	 */
	public static void Extract_all_in(Mazzo m)
	{
		try 
		   {	
			file = new FileReader("Carte_movimento");
			buffer = new BufferedReader(file);
		   }
		catch (Exception e)
			{System.out.println(e);}
		
		try
		{
			s_param = buffer.readLine();
			while(s_param!= null)
			{
			s_token = new StringTokenizer(s_param,";");
			for(int i=0;i<6;i++) // per ogni riga mi aspetto 6 parametri separati da ';' 
			{
			card = new Carta_movimento();
			Integer par_1 = Integer.parseInt(s_token.nextToken());
			Integer par_2 = Integer.parseInt(s_token.nextToken());   //prelevo parametri necessari dal file
			Movimento mov = new Movimento(par_1,par_2);  //costruisco la tupla movimento per la prima quotazione
			card.aggiungi(mov); //aggiungo alla tabella dei movimenti per questa carta il movimento appena creato
			}
			m.addCard(card);  // quando ho scandito tutti i movimenti la aggiungo al mazzo ( la funzione incrementa anche la size )
			s_param = buffer.readLine();  // passo alla prossima riga
			
			}
		}
		catch (Exception e)
		{
			System.out.println(e);	
		}
		m.mischia(); // diamo una mischiata al mazzo corrente 
		try {file.close();} //chiudo il file in ogni caso quando sono uscito dallo switch 
		catch (IOException e) 
		   {System.out.println("Errore nella chiusura del file\n");}
  }
}
