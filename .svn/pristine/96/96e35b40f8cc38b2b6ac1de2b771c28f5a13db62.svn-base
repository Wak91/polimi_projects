package it.polimi.ingegneriaDelSoftware2013.horseFever_lorenzo2.fontana_fabio1.gritti;

import java.util.ArrayList;


/**
 * Lavagna � un arrayList di quotazioni, in pratica raggruppa tutte e 6 le quotazioni delle scuderie
 * in una struttura dati comoda da usare per effettuare i confronti con la classifica in uscita da 
 * corsa. 
 * TRASFORMATA IN CLASSE COMPLETAMENTE STATICA: MI SERVE SOLO UN OGGETTO DI TIPO LAVAGNA
 * QUINDI TANTO VALE FARE CLASSE STATICA
 *
 */
public class Lavagna {
	
	private static ArrayList <Quotazione> lavagna = new ArrayList <Quotazione>() ;
		
	/**
	 * aggiunge una quotazione alla lavagna, questo metodo sar� chiamato all'inizio del gioco
	 * per riempire la lavagna di quotazioni, poi non sar� pi� utilizzato.
	 * ( potremmo valutare l'idea di farlo statico come per mazzo ) 
	 * @param q
	 */
	public static void aggiungi_quotazione(Quotazione q)
	{
	lavagna.add(q);	
	}
	
	/**
	 * dato un colore questo metodo ricerca tra gli oggetti "Quotazione" contenuti in lavagna
	 * la quotazione corrispondente al colore c, una volta trovato ritorna il suo index ( la sua quotazione )  
	 * @param c: � il colore da ricercare 
	 * @return
	 */
	public static int getPosizione(String c)
	{
	for(Quotazione q : lavagna)
		if(c.equals(q.getColore()))
		{  
			return q.getIndex();
			
		}
	return -1;
	}
	
	/**
	 * Questo metodo serve per aggiornare la quotazione di una scuderia all'interno di una lavagna,
	 * dati in ingresso il colore 'c' e un incremento / decremento di posizione 'numb' il metodo ricerca
	 * l'oggetto Quotazione corrispondente al colore 'c' passato e utilizza il metodo setIndex per
	 * aggiornare la quotazione
	 * @param c
	 * @param numb
	 */
	public static void setPosizione(String c, int numb)
	{
		for(Quotazione q : lavagna)
			if(c.equals(q.getColore()))
			   q.setIndex(q.getIndex()+numb);
	}
	
	/**
	 * Metodo che banalmente visualizza la lavagna a schermo.
	 * Una sua evoluzione potrebbe ritornare stringhe da visualizzare su una GUI
	 */
	public static void visualizzaLavagna()
	{
		for(Quotazione q : lavagna)
			q.visualizza();
	}
	/**
	 * 
	 * FUNZIONAMENTO DI UPDATELAVAGNA
	 * Scanning ( for i ) della classifica da 0 fino all'ultima posizione ( 6 ) 
	 * se l'indice corrente � minore della posizione che il colore contenuto in classifica[i]
	 * ha nella lavagna delle quotazioni, allora significa che la scuderia � migliorata quindi
	 * il metodo setPosizione fa scalare la sua quotazione di una posizione verso l'alto ( -1 ) 
	 * 
	 *  se invece i > della posizione della scuderia in lavagna, allora � peggiorata e aggiorno
	 *  la quotazione scalando la posizione verso il basso ( +1 ) 
	 * 
	 * 	
	 * @param classifica
	 */
	
	public static void updateLavagna(String[] classifica)
	{
	 int i;
	 for(i=0;i<classifica.length;i++)
	    {
		 if(i < getPosizione(classifica[i]))  
            setPosizione(classifica[i], -1 );	
		 else
			if(i > getPosizione(classifica[i]))
				setPosizione(classifica[i], +1);
	   }
	
	}
	    

	//---- MAIN PER TESTING ----
	
	public static void main (String args[])
	{
	int i;
	// inizializzazione delle quotazioni ( Operazione che verr� fatta a inizio gioco ) 
    Quotazione q = new Quotazione(0,"rosso");
    Lavagna.aggiungi_quotazione(q);
    Quotazione q1 = new Quotazione(0,"verde");
    Lavagna.aggiungi_quotazione(q1);
    Quotazione q2 = new Quotazione(1,"nero");
    Lavagna.aggiungi_quotazione(q2);
    Quotazione q3 = new Quotazione(3,"bianco");
    Lavagna.aggiungi_quotazione(q3);
    Quotazione q4 = new Quotazione(4,"blu");
    Lavagna.aggiungi_quotazione(q4);
    Quotazione q5 = new Quotazione(6,"giallo");
    Lavagna.aggiungi_quotazione(q5);
    
    // creo una classifica di prova 
	String classifica [] = new String[6];
	classifica[0]="giallo";
	classifica[1]="rosso";
	classifica[2]="nero";
	classifica[3]="verde";
	classifica[4]="bianco";
	classifica[5]="blu";
	//aggiorno la lavagna con la nuova classifica 
	Lavagna.updateLavagna(classifica);
	//e la visualizzo!
	Lavagna.visualizzaLavagna();
	
}
	//---- MAIN PER TESTING ----
}
