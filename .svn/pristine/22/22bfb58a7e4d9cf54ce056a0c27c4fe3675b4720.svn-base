package View;


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Label;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.rmi.server.UID;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.prefs.BackingStoreException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;


import Controller.Controller;
import Controller.Controller_Interface;
import Controller_events.EventoCorsa;
import Controller_events.HorseFeverEventController;
import Controller_events.TruccaEvent;
import Controller_events.askIfSecondaScommessa;
import Controller_events.askScommessaEvent;
import Controller_events.getMovimentoEvent;
import Controller_events.getNomePlayerEvent;
import Controller_events.getNumPlayerEvent;
import Controller_events.showClassificaEvent;
import Controller_events.showPriceEvent;
import Controller_events.showRimossiEvent;
import Controller_events.showWinnerEvent;
import Model.Carta_azione;
import Model.Carta_personaggio;
import Model.Cavallo;
import Model.Giocatore;

public  class  GUI_interface implements User_interface {
	
	public Controller_Interface controller;
	
	private final Toolkit toolkit ;
	private int xSize;
	private int ySize;
	private JFrame frame;
	int num_giocatori_temp=2;
	//---------ATTRIBUTI METODI-------> 
	private JLabel image_num_player;

	
	public GUI_interface() {
		
		toolkit = Toolkit.getDefaultToolkit();
		xSize = ((int) toolkit.getScreenSize().getWidth());  
		ySize = ((int) toolkit.getScreenSize().getHeight()); 
		frame = new JFrame();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		frame.setSize(800,600); 

		
		
	}
	public JFrame get_frame() {
		return this.frame;
	}
	
	public Controller_Interface get_controller() {
		return this.controller;
	}
	
	/**
	 * Metodo che riceve percorso file  dimensioni e 
	 * restituisce una buffered Image ridimensionata che puo essere usata per creare ImageIcon
	 * @param nome_immagine
	 * @param width
	 * @param height
	 * @param type
	 * @return
	 */
	public BufferedImage resizeImage(String nome_immagine,int width,int height) {  
	     try {
			
	    	File fileIcon = new File(nome_immagine);
			BufferedImage originalImage = ImageIO.read(fileIcon);
			BufferedImage resizedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);  
	        Graphics2D g = resizedImage.createGraphics();  
	        g.drawImage(originalImage, 0, 0, width, height, null);  
	        g.dispose();  
	        return resizedImage;  
	     } catch (Exception e) {
				e.printStackTrace();
			}  
	     return null;
    }  
	
	/**
	 * Crea un JoptionPane che con 2 bottoni permette regolare numero giocatori
	 * restituisce numero giocatori
	 */
	public void get_num_player(getNumPlayerEvent  event) {
		Giocatore_GUI gio= new Giocatore_GUI(this , event);
		gio.show();
		
	}

	public void get_nome_player(getNomePlayerEvent event) {
		Giocatore_name_GUI gioc= new Giocatore_name_GUI(this,event);
		gioc.show();
	}

	public void show_panel_trucca(TruccaEvent event) {
	//	TruccaGaraView tgv = new TruccaGaraView(this , event);
		
	}
	
	
	public void get_scommessa(askScommessaEvent event) {
		System.out.println("get_scommessa");
		provascommesse scomProvascommesse = new provascommesse(this,event); 
		scomProvascommesse.show();

	}
	
	public void show_classifica(showClassificaEvent inEvent) {
		// TODO Auto-generated method stub
		
	}
	
	public void show_carta_personaggio(String nome, Carta_personaggio card) {
		
	}

	public ArrayList<Carta_azione> get_carte_azione() {
		// TODO Auto-generated method stub
		return null;
	}

	public void show_action_card(Giocatore player) {
		// TODO Auto-generated method stub

	}

	public String get_cavallo_scommessa(String message) {
		// TODO Auto-generated method stub
		return null;
	}

	public String get_cavallo_scommessa() {
		// TODO Auto-generated method stub
		return null;
	}

	public int get_soldi_scommessa(Giocatore player) {
		// TODO Auto-generated method stub
		return 0;
	}

	public String get_tipo_scommessa() {
		// TODO Auto-generated method stub
		return null;
	}

	public String get_tipo_scommessa(String messaggio) {
		// TODO Auto-generated method stub
		return null;
	}

	public void show_all_bet() {
		// TODO Auto-generated method stub

	}

	public void game_over_player(Giocatore player) {
		// TODO Auto-generated method stub

	}

	public boolean make_seconda_scommessa(Giocatore player) {
		// TODO Auto-generated method stub
		return false;
	}

	public void not_enough_money(String nome) {
		// TODO Auto-generated method stub

	}

	

	public String get_horse_affected() {
		// TODO Auto-generated method stub
		return null;
	}

	public void show_affected_horse() {
		// TODO Auto-generated method stub

	}

	public void show_corsa(ArrayList<Cavallo> cavalli_in_gioco,
			int lunghezza_percorso) {
		// TODO Auto-generated method stub

	}


	public void show_bad_end_message() {
		// TODO Auto-generated method stub

	}

	public void show_win_money(String nome, int money, int pv) {
		// TODO Auto-generated method stub

	}

	public void show_winner(String vincitore) {
		// TODO Auto-generated method stub

	}
	

	public void show_all_bet(Giocatore player) {
		// TODO Auto-generated method stub
		
	}

	public int get_action_card_played(Giocatore player) {
		// TODO Auto-generated method stub
		return 0;
	}

	public void show_action_horse(Cavallo horse) {
		// TODO Auto-generated method stub
		
	}
	
	public void show_win_money(Giocatore player, int money, int pv) {
		// TODO Auto-generated method stub
		
	}
	public void show_win_scud(Giocatore player, int money) {
		// TODO Auto-generated method stub
		
	}
	public void show_lost_money(Giocatore player) {
		// TODO Auto-generated method stub
		
	}
	public void add_controller(Controller cont) {
		// TODO Auto-generated method stub
		
	}
	public void start() {
		// TODO Auto-generated method stub
		
	}
	public void addController(Controller_Interface controller) {
		this.controller=controller;
		
	}
	public void get_scommessa() {
		// TODO Auto-generated method stub
		
	}

	public void get_num_player(HorseFeverEventController event) {
		// TODO Auto-generated method stub
		
	}
	public void show_corsa(EventoCorsa evento) {
		// TODO Auto-generated method stub
		
	}
	public void show_carta_movimento(getMovimentoEvent gme) {
		// TODO Auto-generated method stub
		
	}

	public void ask_seconda_scommessa(askIfSecondaScommessa event) {
		// TODO Auto-generated method stub
		
	}
	public void ask_if_seconda_scommessa(askIfSecondaScommessa event) {
		// TODO Auto-generated method stub
		
	}
	public void show_win_price(showPriceEvent evt) {
		// TODO Auto-generated method stub
		
	}
	public void show_rimossi(showRimossiEvent evt) {
		// TODO Auto-generated method stub
		
	}
	public void show_winner(showWinnerEvent evt) {
		// TODO Auto-generated method stub
		
	}
	

	


	



}
