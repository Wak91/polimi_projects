package it.polimi.ingegneriaDelSoftware2013.horseFever_lorenzo2.fontana_fabio1.gritti;

/**
 * Scheletro della classe game, questo andrà poi affettato nei vari
 * moduli che comunicheranno tra loro.
 * Questo è per farsi un idea di quello che ci sarà da fare e per capire
 * eventuali problemi
 * 
 *
 */
public class Game {

	
	public static void main (String args[])
	{
		//aggiungo tutti i giocatori alla lista dei giocatori
		Giocatore g1 = new Giocatore("fons");
		Elenco_giocatori.aggiungiGiocatore(g1);
		Giocatore g2 = new Giocatore("fabio");
		Elenco_giocatori.aggiungiGiocatore(g2);
		Giocatore g3 = new Giocatore("seba");
		Elenco_giocatori.aggiungiGiocatore(g3);
		Giocatore g4 = new Giocatore("ale");
		Elenco_giocatori.aggiungiGiocatore(g4);
		
		//--Inizializzazione dei mazzi
		 
		Mazzo mAzione = new Mazzo();
		Mazzo mPersonaggio = new Mazzo();
		Mazzo mScuderia = new Mazzo();
		Mazzo mMovimento = new Mazzo();
		Carta_azione.Extract_all_in(mAzione);
		Carta_personaggio.Extract_all_in(mPersonaggio);
		Carta_scuderia.Extract_all_in(mScuderia);
		Carta_movimento.Extract_all_in(mMovimento);
				
		//--Inizializzo riserva segnalini scommessa
		/**
		 * da qualche parte leggerò il numero di giocatori per capire
		 * quanti segnalini scommessa assegnare ad ogni scuderia
		 * adesso ipotizzo che ci siano 4 giocatori, quindi 3se per ogni colore
		 * ( serve una struttura che memorizzi in base al num di giocatori il numero
		 * di segnalini da istanziare )
		 * 
		 * Questa parte è meglio automatizzarla con un for, magari estrando
		 * da una struttura di colori il next color da istanziare (utilizzabile tra
		 * l'altro in più occasioni durante l'inizializzazione )
		 */
		int num_gioc = Elenco_giocatori.getNumGiocatori();
        Segnalino_scommessa sc_rosso = new Segnalino_scommessa("rosso",3,3);
        Segnalini.addSegnalino(sc_rosso);
        Segnalino_scommessa sc_verde = new Segnalino_scommessa("verde",3,3);
        Segnalini.addSegnalino(sc_verde);
        Segnalino_scommessa sc_blu = new Segnalino_scommessa("blu",3,3);
        Segnalini.addSegnalino(sc_blu);
        Segnalino_scommessa sc_giallo = new Segnalino_scommessa("giallo",3,3);
        Segnalini.addSegnalino(sc_giallo);
        Segnalino_scommessa sc_nero = new Segnalino_scommessa("nero",3,3);
        Segnalini.addSegnalino(sc_nero);
        Segnalino_scommessa sc_bianco = new Segnalino_scommessa("bianco",3,3);
        Segnalini.addSegnalino(sc_bianco);
        
        /**
         * Ora assegno ad ogni scuderia una quotazione iniziale creando la lavagna
         * questo passo viene poi fatto in modo automatizzato basandosi su un random
         */

        Quotazione q_rosso = new Quotazione (5,"rosso");
        Lavagna.aggiungi_quotazione(q_rosso);
        Quotazione q_verde = new Quotazione (4,"verde");
        Lavagna.aggiungi_quotazione(q_verde);
        Quotazione q_giallo = new Quotazione (3,"giallo");
        Lavagna.aggiungi_quotazione(q_giallo);
        Quotazione q_blu = new Quotazione (2,"blu");
        Lavagna.aggiungi_quotazione(q_blu);
        Quotazione q_bianco = new Quotazione (1,"bianco");
        Lavagna.aggiungi_quotazione(q_bianco);
        Quotazione q_nero = new Quotazione (0,"nero");
        Lavagna.aggiungi_quotazione(q_nero);
        
        /**
         * Ora assegno ad ogni giocatore una carta personaggio
         * Le carte sono già state mischiate all'inizio quindi posso
         * estrarre senza problemi dall'alto
         */
        for(Giocatore gg : Elenco_giocatori.getElenco())
        {
		Carta_personaggio pescata = (Carta_personaggio) mPersonaggio.pesca();
		gg.set_money(pescata.getSoldi());
		//settaggio carta scuderia in corrispondenza del personaggio pescato
		//settaggio del numero dei PV ( manca attributo in giocatore )
        }
        
        //posizione delle pedine implicitamente già gestita nel costruttore di cavallo
        Cavallo Cnero = new Cavallo();
        Cavallo Cblu = new Cavallo();
        Cavallo Cverde = new Cavallo();
        Cavallo Crosso = new Cavallo();
        Cavallo Cgiallo = new Cavallo();
        Cavallo Cbianco = new Cavallo();
        
        
        //mischio la struttura elenco_giocatori in modo da dare un ordine di gioco casuale
        Elenco_giocatori.ordineCasuale();
        
        //_______________________________________________________________
        
        //  QUA IN PRATICA FINISCE LA FASE DI INIZIALIZZAZIONE DEL GIOCO
        
        //_______________________________________________________________
        
        //ora inizia la fase del gioco che si ripete ad ogni turno
        for(Giocatore gg : Elenco_giocatori.getElenco())
           {
           Carta_azione pescata = (Carta_azione)mAzione.pesca();
           gg.addCarta(pescata);
           pescata = (Carta_azione)mAzione.pesca();
           gg.addCarta(pescata);
           }
        
        /**
         * in giocatore probabilmente non serve l'array list di carte 
         * azione, perchè la carta personaggio viene assorbita dagli  attributi 
         *  quella scuderia potremmo utilizzare un attributo e queste due carte 
         *  sono entrambe carte azione, quindi o usiamo un mini-array o 2 attributi...
         */
        
		
        
	}
}
