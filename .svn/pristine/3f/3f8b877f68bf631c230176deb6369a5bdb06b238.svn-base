package it.polimi.ingegneriaDelSoftware2013.horseFever_lorenzo2.fontana_fabio1.gritti;

import java.util.ArrayList;
import java.util.Collections;
/**
 * Struttura che gestisce tutti i giocatori presenti nel gioco
 * Creata perchï¿½ risulta piu' comodo avere una classe dedicata che un 
 * arraylist volante nella classe game
 * anche questa tutta statica
 * @author Family
 *
 */
public  class Elenco_giocatori {

	private static ArrayList <Giocatore> elenco_giocatori = new ArrayList <Giocatore>();
	
	public static void aggiungiGiocatore(Giocatore player)
	{
		elenco_giocatori.add(player);
	}
	
	public static int getNumGiocatori()
	{
		return elenco_giocatori.size();
	}
	
	public static Giocatore getGiocatoreIndex(int i){
		return elenco_giocatori.get(i);
	}
	
	/**
	 * ritorno l'elenco di giocatori senza esporre il rep
	 * @return
	 */
	public static ArrayList <Giocatore> getElenco()
	{
		ArrayList <Giocatore> players = new ArrayList <Giocatore> ();
		for(Giocatore gg : elenco_giocatori)
			players.add(gg);
		return players;
			
	}
	
	/**
	 * Questo metodo serve per dare un ordinamento iniziale e casuale ai turni dei giocatori
	 */
	public static void ordineCasuale()
	{
		Collections.shuffle(elenco_giocatori);
	}
	
	public static void show_players() {
		for (Giocatore player : elenco_giocatori) {
			System.out.println(player.toString());
		}
		
	}
	
}
