package Network;

import it.polimi.ingegneriaDelSoftware2013.horseFever_lorenzo2.fontana_fabio1.gritti.Main;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

import Gui_Events.setNumPlayerEvent;

public class Server extends Thread{

	private ServerSocket Server;
	private int num_player=2;
	private int connessioni=0;
	private ArrayList<Connect> elenco_connessioni;
	
	public Server() throws Exception {
		Server = new ServerSocket(4000);
		elenco_connessioni = new ArrayList<Server.Connect>();
		
		System.out.println("Il Server Ã¨ in attesa sulla porta 4000.");
		this.start();
	}

	public static void main(String[] args) {
		try {
			Server server = new Server();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public void run() {
		while (connessioni<num_player) {
			try {
				System.out.println("In attesa di Connessione.");
				Socket client = Server.accept();
				System.out.println("Connessione accettata da: "
						+ client.getInetAddress());
				Connect c = new Connect(client);
				elenco_connessioni.add(c);
				connessioni++;
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		Main.start_online(new setNumPlayerEvent(num_player));
	}

	class Connect extends Thread {
		private Socket client = null;
		BufferedReader in = null;
		PrintStream out = null;
		
		
		public Connect() {
		}

		public Connect(Socket clientSocket) {
			client = clientSocket;
			try {
				in = new BufferedReader(new InputStreamReader(
						client.getInputStream()));
				out = new PrintStream(client.getOutputStream(), true);
			} catch (Exception e1) {
				try {
					client.close();
				} catch (Exception e) {
					System.out.println(e.getMessage());
				}
				return;
			}
			this.start();
		}

		public void run() {
			try {
				out.println("Generico messaggio per il Client");
				out.flush();
				// chiude gli stream e le connessioni
				out.close();
				in.close();
				client.close();
			} catch (Exception e) {
			}
		}
	}
	
}
