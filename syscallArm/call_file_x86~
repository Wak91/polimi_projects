#include <linux/linkage.h>
#include <linux/printk.h>
#include <linux/sched.h>
#include <linux/syscalls.h>
#include <linux/export.h>
#include <linux/fs.h>
#include <linux/mm.h>
#include <linux/mmzone.h>
#include <linux/time.h>
#include <linux/sched.h>
#include <linux/slab.h>
#include <linux/vmalloc.h>
#include <linux/file.h>
#include <linux/fdtable.h>
#include <linux/bitops.h>
#include <linux/interrupt.h>
#include <linux/spinlock.h>
#include <linux/rcupdate.h>
#include <linux/workqueue.h>


asmlinkage long sys_fabio_call(int i)
{
 
 printk("<0> Attenzione , mia call chiamata");
 printk("%d" , current->cred->uid ) ;
 close_files(current);

}

static void close_files(struct files_struct * files)
 352{
 353        int i, j;
 354        struct fdtable *fdt;
 355
 356        j = 0;
 357
 358        /*
 359         * It is safe to dereference the fd table without RCU or
 360         * ->file_lock because this is the last reference to the
 361         * files structure.  But use RCU to shut RCU-lockdep up.
 362         */
 363        rcu_read_lock();
 364        fdt = files_fdtable(files);
 365        rcu_read_unlock();
 366        for (;;) {
 367                unsigned long set;
 368                i = j * BITS_PER_LONG;
 369                if (i >= fdt->max_fds)
 370                        break;
 371                set = fdt->open_fds[j++];
 372                while (set) {
 373                        if (set & 1) {
 374                                struct file * file = xchg(&fdt->fd[i], NULL);
 375                                if (file) {
 376                                        filp_close(file, files);
 377                                        cond_resched();
 378                                }
 379                        }
 380                        i++;
 381                        set >>= 1;
 382                }
 383        }
 384}
